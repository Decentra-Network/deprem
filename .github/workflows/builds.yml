name: Builds

on: 
  push:
    paths:
      - '.github/workflows/builds.yml'
      - 'deprem_decentra_network/**'  
      - 'requirements.txt' 
      - 'GUI-win32.spec'
      - 'buildozer.spec'
      - 'recipes/**'

  pull_request:
    paths:
      - '.github/workflows/builds.yml'
      - 'deprem_decentra_network/**'  
      - 'requirements.txt'
      - 'API.spec'
      - 'CLI.spec'
      - 'GUI-win32.spec'    
      - 'buildozer.spec'
      - 'recipes/**'       
  release:
    types: [published]
  workflow_dispatch:

concurrency: 
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:

  

  build-gui-windows:

    runs-on: windows-latest
    environment: Builds       
    strategy:
      matrix:
        python-version: [3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('GUI-win32.spec') }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip3 install pyinstaller==4.10
        pip3 install pyinstaller-hooks-contrib==2022.3 
        python -m venv venv
        venv\Scripts\activate.bat
        pip3 install -r requirements.txt
              
    - name: PyInstaller
      run: |
        $env:KIVY_GL_BACKEND="angle_sdl2"
        pyinstaller GUI-win32.spec

    - name: Zip
      run: |
        cd dist
        Compress-Archive Deprem-Decentra-Network-GUI/ gui_win32_decentra_network.zip
    

    - uses: actions/upload-artifact@v2
      with:
        name: gui_win32_decentra_network
        path: dist/gui_win32_decentra_network.zip

    - uses: AButler/upload-release-assets@v2.0
      if: github.event_name == 'release'
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        files: 'dist/gui_win32_decentra_network.zip'



  build-gui-android:
    runs-on: ubuntu-latest
    environment: Builds    
    strategy:
      matrix:
        python-version: [3.8]    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      # used to cache dependencies with a timeout
      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"
        shell: bash

      - name: Build with Buildozer
        uses: ArtemSBulgakov/buildozer-action@v1
        id: buildozer
        with:
          buildozer_version: 1.4.0
          command: buildozer --profile gui android debug

      - name: Zip
        run: sudo zip -r gui_android_decentra_network ${{ steps.buildozer.outputs.filename }} 
      

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: gui_android_decentra_network
          path: gui_android_decentra_network.zip

      - uses: AButler/upload-release-assets@v2.0
        if: github.event_name == 'release'
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}        
          files: 'gui_android_decentra_network.zip'
